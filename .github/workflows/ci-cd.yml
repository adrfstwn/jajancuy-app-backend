name: JAJANCUY API CI CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  python-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: backend/backend-python/django_backend/user_services
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r ../../../requirements.txt

      - name: Run migrations
        working-directory: backend/backend-python/django_backend/user_services
        env:
          DATABASE_URL: postgres://postgres:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run tests
        working-directory: backend/backend-python/django_backend/user_services
        env:
          DATABASE_URL: postgres://postgres:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
        run: |
          source venv/bin/activate
          pytest

#   go-backend:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '1.20'

#       - name: Build Go Backend
#         working-directory: backend/backend-go
#         run: |
#           go mod tidy
#           go build -o main

#       - name: Run tests
#         working-directory: backend/backend-go
#         run: |
#           go test ./...

  deploy:
    runs-on: ubuntu-latest
    needs: [python-backend]

    steps:
      - name: Deploy to Server
        run: |
          echo "Deploy script here, such as SSH to server or other steps."
